"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3401],{1311:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"caching/index","title":"Caching with Cube","description":"One of Cube\'s most powerful features is its sophisticated caching system that can dramatically improve query performance and provide higher concurrency for analytical workloads. Instead of hitting your database every time, Cube can serve results from optimized caches that are orders of magnitude faster.","source":"@site/docs/caching/index.md","sourceDirName":"caching","slug":"/caching/","permalink":"/cube-workshop/docs/caching/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"workshopSidebar","previous":{"title":"Access Control with Cube","permalink":"/cube-workshop/docs/access-control/"},"next":{"title":"APIs: Multiple Ways to Access Data","permalink":"/cube-workshop/docs/apis/"}}');var i=s(4848),t=s(8453);const a={sidebar_position:1},o="Caching with Cube",l={},d=[{value:"Why Caching Matters",id:"why-caching-matters",level:2},{value:"Cube&#39;s Two-Level Caching System",id:"cubes-two-level-caching-system",level:2},{value:"1. In-Memory Cache (Automatic)",id:"1-in-memory-cache-automatic",level:3},{value:"2. Pre-Aggregations (Configurable)",id:"2-pre-aggregations-configurable",level:3},{value:"Understanding Additive vs Non-Additive Measures",id:"understanding-additive-vs-non-additive-measures",level:2},{value:"\u2705 Additive Measures (Cache-Friendly)",id:"-additive-measures-cache-friendly",level:3},{value:"\u274c Non-Additive Measures (Cache-Challenging)",id:"-non-additive-measures-cache-challenging",level:3},{value:"\ud83d\udca1 Making Non-Additive Measures Cache-Friendly",id:"-making-non-additive-measures-cache-friendly",level:3},{value:"Pre-Aggregations in Action",id:"pre-aggregations-in-action",level:2},{value:"What Are Pre-Aggregations?",id:"what-are-pre-aggregations",level:3},{value:"Exercise 1: Basic Sales Pre-Aggregation",id:"exercise-1-basic-sales-pre-aggregation",level:3},{value:"Exercise 2: Executive KPI Dashboard Pre-Aggregation",id:"exercise-2-executive-kpi-dashboard-pre-aggregation",level:3},{value:"Exercise 3: Customer Behavior Pre-Aggregation",id:"exercise-3-customer-behavior-pre-aggregation",level:3},{value:"Understanding Your Pre-Aggregation Strategy",id:"understanding-your-pre-aggregation-strategy",level:2},{value:"Performance Optimization Strategies",id:"performance-optimization-strategies",level:2},{value:"1. Granularity Matters",id:"1-granularity-matters",level:3},{value:"2. Dimension Selection",id:"2-dimension-selection",level:3},{value:"3. Measure Additivity",id:"3-measure-additivity",level:3},{value:"4. Refresh Strategy Based on Business Needs",id:"4-refresh-strategy-based-on-business-needs",level:3},{value:"Visual Performance Indicator",id:"visual-performance-indicator",level:3},{value:"Building and Monitoring Pre-Aggregations",id:"building-and-monitoring-pre-aggregations",level:2},{value:"Build Strategy",id:"build-strategy",level:3},{value:"Common Pitfalls to Avoid",id:"common-pitfalls-to-avoid",level:3},{value:"Advanced Caching Concepts",id:"advanced-caching-concepts",level:2},{value:"Rollup-Only Mode",id:"rollup-only-mode",level:3},{value:"Custom Indexes",id:"custom-indexes",level:3},{value:"Rollup Lambdas",id:"rollup-lambdas",level:3},{value:"Partitioning",id:"partitioning",level:3},{value:"Orchestration",id:"orchestration",level:3},{value:"Key Takeaways",id:"key-takeaways",level:2},{value:"Commit Your Caching Optimizations",id:"commit-your-caching-optimizations",level:2},{value:"What You&#39;ve Accomplished",id:"what-youve-accomplished",level:3}];function c(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"caching-with-cube",children:"Caching with Cube"})}),"\n",(0,i.jsxs)(n.p,{children:["One of Cube's most powerful features is its sophisticated caching system that can ",(0,i.jsx)(n.strong,{children:"dramatically improve query performance"})," and provide ",(0,i.jsx)(n.strong,{children:"higher concurrency"})," for analytical workloads. Instead of hitting your database every time, Cube can serve results from optimized caches that are orders of magnitude faster."]}),"\n",(0,i.jsx)(n.h2,{id:"why-caching-matters",children:"Why Caching Matters"}),"\n",(0,i.jsx)(n.p,{children:"In analytics, you often face the challenge of querying large datasets repeatedly. Without caching:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Slow queries"})," - Complex aggregations across millions or billions of rows take time"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database load"})," - Multiple users running similar queries strain your data warehouse"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Poor user experience"})," - Dashboard users wait seconds or minutes for results"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"High costs"})," - Cloud data warehouses charge for compute time"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Cube's caching solves these problems by creating ",(0,i.jsx)(n.strong,{children:"pre-computed, aggregated data"})," that can answer queries in milliseconds rather than seconds."]}),"\n",(0,i.jsx)(n.h2,{id:"cubes-two-level-caching-system",children:"Cube's Two-Level Caching System"}),"\n",(0,i.jsx)(n.h3,{id:"1-in-memory-cache-automatic",children:"1. In-Memory Cache (Automatic)"}),"\n",(0,i.jsx)(n.p,{children:"Cube automatically caches query results in memory using the generated SQL as the cache key. This happens transparently - no configuration required."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Automatic"})," - Works out of the box"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Fast"})," - Serves repeated queries instantly"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Smart invalidation"})," - Uses refresh keys to detect when data changes"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-pre-aggregations-configurable",children:"2. Pre-Aggregations (Configurable)"}),"\n",(0,i.jsxs)(n.p,{children:["Pre-aggregations are ",(0,i.jsx)(n.strong,{children:"condensed, optimized data versions"})," that you configure in your data model. They can reduce dataset size by ",(0,i.jsx)(n.strong,{children:"several orders of magnitude"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\ud83c\udfaf ",(0,i.jsx)(n.strong,{children:"Targeted"})," - You choose what to cache"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\ude80 ",(0,i.jsx)(n.strong,{children:"Extreme performance"})," - Millisecond response times"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\udd04 ",(0,i.jsx)(n.strong,{children:"Background refresh"})," - Updates happen behind the scenes"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\udee1\ufe0f ",(0,i.jsx)(n.strong,{children:"Security-aware"})," - Respects all access control rules"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"understanding-additive-vs-non-additive-measures",children:"Understanding Additive vs Non-Additive Measures"}),"\n",(0,i.jsx)(n.p,{children:"Before diving into pre-aggregations, it's crucial to understand which measures work well for caching:"}),"\n",(0,i.jsx)(n.h3,{id:"-additive-measures-cache-friendly",children:"\u2705 Additive Measures (Cache-Friendly)"}),"\n",(0,i.jsx)(n.p,{children:"These measures can be safely aggregated and combined:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"measures:\n  # Perfect for pre-aggregations\n  - name: total_sales\n    sql: revenue\n    type: sum\n    \n  - name: order_count\n    type: count\n    \n  - name: active_users\n    sql: user_id\n    type: count_distinct_approx\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Why they work:"})," You can sum sums, add counts, and roll up totals across time periods and dimensions."]}),"\n",(0,i.jsx)(n.h3,{id:"-non-additive-measures-cache-challenging",children:"\u274c Non-Additive Measures (Cache-Challenging)"}),"\n",(0,i.jsx)(n.p,{children:"These measures don't combine well in pre-aggregations.  They can still be pre-aggregated, but the aggregate will only be used if the query matches the exact grain of the pre-aggregation (includes exactly the same dimensions):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'measures:\n  # Problematic for basic pre-aggregations\n  # averages\n  - name: average_order_value\n    sql: "{order_value}"\n    type: average\n  \n  # distinct counts\n  - name: distinct_customers\n    sql: customer_id\n    type: count_distinct\n    \n  # ratios\n  - name: conversion_rate\n    sql: "{orders} / {visitors} * 100"\n    type: number\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Why they're tricky:"})," You can't average averages, ratios don't sum correctly, and distinct counts need special handling."]}),"\n",(0,i.jsx)(n.h3,{id:"-making-non-additive-measures-cache-friendly",children:"\ud83d\udca1 Making Non-Additive Measures Cache-Friendly"}),"\n",(0,i.jsxs)(n.p,{children:["The solution? Store the ",(0,i.jsx)(n.strong,{children:"building blocks"})," instead:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'# Instead of storing average_order_value directly,\n# store the components and calculate on-the-fly\nmeasures:\n  - name: total_sales\n    sql: revenue\n    type: sum\n    \n  - name: order_count\n    type: count\n    \n  - name: average_order_value\n    sql: "{CUBE.total_sales} / {CUBE.order_count}"\n    type: number\n    # This calculates correctly from cached components!\n'})}),"\n",(0,i.jsx)(n.h2,{id:"pre-aggregations-in-action",children:"Pre-Aggregations in Action"}),"\n",(0,i.jsx)(n.p,{children:"Let's add some pre-aggregations to our TPC-H model to see the performance benefits."}),"\n",(0,i.jsx)(n.h3,{id:"what-are-pre-aggregations",children:"What Are Pre-Aggregations?"}),"\n",(0,i.jsxs)(n.p,{children:["Think of pre-aggregations as ",(0,i.jsx)(n.strong,{children:"pre-computed summary tables"})," that Cube creates and maintains for you, generally:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Without pre-aggregations"}),": Every query runs against your data warehouse"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"With pre-aggregations"}),": Queries hit much smaller, pre-computed roll-ups"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Key Components of a Pre-Aggregation:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Measures"}),": The aggregates you want to calculate (revenue, count, etc.)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Dimensions"}),": How you want to group or filter the measures (by region, product type, etc.)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Time dimension"}),": The date/time field for time-based grouping"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Granularity"}),": The time bucket size (hour, day, week, month) - trunctates the time dimension to this level"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Refresh key"}),": How often to rebuild the pre-aggregation with fresh data"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Pre-aggregations are aggregate-aware, meaning they can be used to answer queries that match their defined measures and dimensions ",(0,i.jsx)(n.strong,{children:"or any subset of fields or higher date rollup"}),". If a query includes additional dimensions not in the pre-aggregation, it will fall back to a live query against the data warehouse."]}),"\n",(0,i.jsxs)(n.admonition,{title:"Development Mode Reminder",type:"tip",children:[(0,i.jsxs)(n.p,{children:["Before adding pre-aggregations to your data model, ensure you're in ",(0,i.jsx)(n.strong,{children:"Development Mode"}),":"]}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Navigate to the ",(0,i.jsx)(n.strong,{children:"Data Model"})," page"]}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:'"Dev Mode"'})," (top of the interface)"]}),"\n",(0,i.jsx)(n.li,{children:"Continue with your existing development branch from the access control module"}),"\n"]}),(0,i.jsx)(n.p,{children:"This ensures your caching optimizations won't affect production until you're ready to deploy them."})]}),"\n",(0,i.jsx)(n.h3,{id:"exercise-1-basic-sales-pre-aggregation",children:"Exercise 1: Basic Sales Pre-Aggregation"}),"\n",(0,i.jsxs)(n.p,{children:["Add this pre-aggregation to your ",(0,i.jsx)(n.code,{children:"line_items.yml"})," cube:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="/model/cubes/line_items.yml" {16-30}',children:'... \n\n    joins:\n      - name: orders\n        relationship: many_to_one\n        sql: "{CUBE}.l_orderkey = {orders}.o_orderkey"\n\n      - name: parts\n        relationship: many_to_one\n        sql: "{CUBE}.l_partkey = {parts}.p_partkey"\n\n      - name: suppliers\n        relationship: many_to_one\n        sql: "{CUBE}.l_suppkey = {suppliers}.s_suppkey"\n\n    pre_aggregations:\n      - name: sales_by_month\n        measures:\n          - total_sales_amount\n          - total_quantity\n          - count\n        dimensions:\n          - customer_regions.name\n          - customer_regions.region_key\n          - customers.name\n          - customers.customer_key\n        time_dimension: ship_date\n        granularity: month\n        refresh_key:\n          every: "1 day"\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"What this does:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pre-calculates monthly sales totals"}),"\n",(0,i.jsx)(n.li,{children:"Updates every day to keep data fresh"}),"\n",(0,i.jsx)(n.li,{children:"Dramatically speeds up queries grouped by month"}),"\n",(0,i.jsx)(n.li,{children:"Contains the dimensions needed for regional and customer row-level security (so our directors and sales reps can hit the cache)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Now let's head over to the Pre-Aggregations tab in Cube Cloud and compile our changes.  This will create the pre-aggregation table in Cube Store."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Click the ",(0,i.jsx)(n.strong,{children:"Pre-Aggregations"})," tab in Cube Cloud"]}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"line_items sales_by_month"})," text to open the pre-aggregation details"]}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"Build All"})," to create the pre-aggregation"]}),"\n",(0,i.jsx)(n.li,{children:"Wait for the build to complete (should take less than a minute)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Pre-aggregation build complete",src:s(7038).A+"",width:"3016",height:"1164"})}),"\n",(0,i.jsx)(n.p,{children:"When that's done, you can test the performance improvement:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Go to the ",(0,i.jsx)(n.strong,{children:"Playground"})," tab"]}),"\n",(0,i.jsxs)(n.li,{children:["Run a query on the ",(0,i.jsx)(n.strong,{children:"sales"})," view with:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Measures: ",(0,i.jsx)(n.code,{children:"total_sales_amount"}),", ",(0,i.jsx)(n.code,{children:"total_quantity"})]}),"\n",(0,i.jsxs)(n.li,{children:["Time: ",(0,i.jsx)(n.code,{children:"ship_date"})," by ",(0,i.jsx)(n.code,{children:"month"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Run with each of our 3 test user types (admin, director, sales rep) in the security context"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{ "user_id": "admin@tpch.com" }\n\n{ "user_id": "director_na@tpch.com" }\n\n{ "user_id": "sarah_jones@tpch.com" }\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:["Note the execution time (in the top-right) after adding the pre-aggregation has dropped to sub-second!  You can also see the ",(0,i.jsx)(n.strong,{children:"cache indicator"}),"  showing that the query hit the pre-aggregation cache (yellow lightning bolt).  Check the ",(0,i.jsx)(n.strong,{children:"Generated SQL"})," tab to see the SQL that was run against the pre-aggregation table."]}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{}),(0,i.jsxs)(n.p,{children:["If you ever want to see if a query will hit a pre-aggregation, you can set up your query (fields, filters, sort, etc) in the playground and just click ",(0,i.jsx)(n.strong,{children:"Generated SQL"})," - if the source looks like ",(0,i.jsx)(n.code,{children:"SELECT ... FROM prod_pre_aggregations... "})," you're hitting a pre-agg - no need to hit the ",(0,i.jsx)(n.strong,{children:"Run Query"})," button to find out."]})]}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test dimension coverage"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Add ",(0,i.jsx)(n.code,{children:"region"})," to the query \u2192 Check ",(0,i.jsx)(n.strong,{children:"Generated SQL"})," \u2192 Should still hit pre-aggregation (because we included ",(0,i.jsx)(n.code,{children:"customer_regions.name"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Add ",(0,i.jsx)(n.code,{children:"nation"})," to the query \u2192 Check ",(0,i.jsx)(n.strong,{children:"Generated SQL"})," \u2192 No longer hits pre-aggregation (because we didn't include nation)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Key Learning"}),": Pre-aggregations only accelerate queries that use ",(0,i.jsx)(n.strong,{children:"measures and dimensions you defined, or a subset"}),". If a query needs additional dimensions, it falls back to raw data."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Why This Matters"}),": You need to carefully choose which dimensions to include based on how your dashboards will actually be used. Include too few \u2192 fewer cache hits. Include too many \u2192 larger, slower pre-aggregations.  There's a balance to strike based on your business needs."]}),"\n",(0,i.jsx)(n.h3,{id:"exercise-2-executive-kpi-dashboard-pre-aggregation",children:"Exercise 2: Executive KPI Dashboard Pre-Aggregation"}),"\n",(0,i.jsx)(n.p,{children:"Now let's create a high-level pre-aggregation perfect for an executive dashboard showing key business metrics."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Planning Your Pre-Aggregation:"}),"\nBefore writing the YAML, think about:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Who will use this?"})," \u2192 Executives need high-level trends, not detailed drill-downs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"What questions will they ask?"}),' \u2192 "How are sales trending by brand?" "Which regions underperform?"']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"How often do they check?"})," \u2192 Weekly reviews, so weekly granularity makes sense"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"What filtering do they need?"})," \u2192 By brand, priority, region (plus security filtering)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Add the ",(0,i.jsx)(n.code,{children:"executive_kpis"})," pre-agg to your ",(0,i.jsx)(n.code,{children:"line_items.yml"})," cube:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="/model/cubes/line_items.yml" {19-32}',children:'...\n\n    pre_aggregations:\n      - name: sales_by_month\n        measures:\n          - total_sales_amount\n          - total_quantity\n          - count\n        dimensions:\n          - customer_regions.name\n          - customer_regions.region_key\n          - customers.name\n          - customers.customer_key\n        time_dimension: ship_date\n        granularity: month\n        refresh_key:\n          every: "1 day"\n\n      - name: executive_kpis\n        measures:\n          - total_sales_amount\n          - total_discount\n        dimensions:\n          - customer_regions.name\n          - customer_regions.region_key\n          - customers.customer_key\n          - parts.brand\n          - orders.priority\n        time_dimension: ship_date\n        granularity: week\n        refresh_key:\n          every: "4 hour"\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"What this pre-aggregation enables:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\ud83d\udcca ",(0,i.jsx)(n.strong,{children:"Weekly Revenue Trends"})," - Perfect for executive dashboards"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83c\udff7\ufe0f ",(0,i.jsx)(n.strong,{children:"Brand Performance Analysis"})," - Which brands drive revenue"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\udea8 ",(0,i.jsx)(n.strong,{children:"Priority Order Tracking"})," - Monitor urgent vs regular orders"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\udcb0 ",(0,i.jsx)(n.strong,{children:"Discount Impact Analysis"})," - Track margin erosion"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\udd12 ",(0,i.jsx)(n.strong,{children:"Security-Ready"})," - Includes dimensions for row-level filtering"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Testing Your Pre-Aggregation:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Save your changes"})," and navigate to the Pre-Aggregations tab"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Build the pre-aggregation"})," by clicking ",(0,i.jsx)(n.strong,{children:"line_items executive_kpis"}),' then "Build All"']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test in Playground"})," with a query using the ",(0,i.jsx)(n.code,{children:"sales"})," view like:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Measures: ",(0,i.jsx)(n.code,{children:"total_sales_amount"}),", ",(0,i.jsx)(n.code,{children:"discount_rate"})]}),"\n",(0,i.jsxs)(n.li,{children:["Dimensions: ",(0,i.jsx)(n.code,{children:"parts_brand"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Check Generated SQL"})," - Look for ",(0,i.jsx)(n.code,{children:"prod_pre_aggregations"})," in the FROM clause to confirm cache hit"]}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"discount_rate"})," is a non-additive measure, and it is not in our pre-aggregation - however, it can be calculated on-the-fly from the pre-aggregated ",(0,i.jsx)(n.code,{children:"total_sales_amount"})," and ",(0,i.jsx)(n.code,{children:"total_discount"})," measures."]}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Discount Rate Calculated from Pre-Aggregation",src:s(8297).A+"",width:"1511",height:"649"})})]}),"\n",(0,i.jsx)(n.h3,{id:"exercise-3-customer-behavior-pre-aggregation",children:"Exercise 3: Customer Behavior Pre-Aggregation"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Notice"}),": This pre-aggregation goes in the ",(0,i.jsx)(n.code,{children:"orders.yml"})," cube, not ",(0,i.jsx)(n.code,{children:"line_items.yml"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Why?"})," Because we're analyzing ",(0,i.jsx)(n.strong,{children:"order-level behavior"})," (how many orders, average order value), not line-item details. The grain of analysis determines which cube gets the pre-aggregation."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Different Cube, Different Insights:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"line_items"})," cube \u2192 Product sales details, return rates, shipping analysis"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"orders"})," cube \u2192 Customer purchasing patterns, order frequency, order sizes"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Add this to your ",(0,i.jsx)(n.code,{children:"orders.yml"})," cube:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="/model/cubes/orders.yml" {12-32}',children:'...\n\n    joins:\n      - name: customers\n        relationship: many_to_one\n        sql: "{CUBE}.o_custkey = {customers}.c_custkey"\n\n      - name: line_items\n        relationship: one_to_many\n        sql: "{CUBE}.o_orderkey = {line_items}.l_orderkey"\n\n    pre_aggregations:\n      - name: customer_behavior\n        measures:\n          - count\n          - total_revenue\n        dimensions:\n          - customer_regions.name\n          - customer_regions.region_key\n          - customers.customer_key\n          - customers.segment\n          - status\n          - order_size_category\n        time_dimension: order_date\n        granularity: day\n        refresh_key:\n          every: "8 hour"\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Save"})," your changes to the cube."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Dashboard possibilities:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\ud83d\udcc8 ",(0,i.jsx)(n.strong,{children:"Customer Segment Performance"})," - Compare segments over time"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\udce6 ",(0,i.jsx)(n.strong,{children:"Order Size Distribution"})," - Understand purchase patterns"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Order Status Monitoring"})," - Track fulfillment metrics"]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83d\udc65 ",(0,i.jsx)(n.strong,{children:"Customer Value Analysis"})," - Identify high-value customers"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Create the Customer Behavior View:"})}),"\n",(0,i.jsxs)(n.p,{children:["Before testing, create a view optimized for customer behavior analysis. Create a new file ",(0,i.jsx)(n.code,{children:"customer_behavior.yml"})," in your ",(0,i.jsx)(n.code,{children:"model/views"})," folder:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="/model/views/customer_behavior.yml"',children:'views:\n  - name: customer_behavior\n    description: "Customer behavior analytics optimized for order-level analysis"\n    public: true\n\n    cubes:\n      # Base cube - orders (order-level analysis)\n      - join_path: orders\n        includes:\n          - count\n          - total_revenue\n          - average_order_value\n          - order_date\n          - status\n          - priority\n          - order_size_category\n          \n      # Customer information\n      - join_path: orders.customers\n        prefix: true\n        includes:\n          - name\n          - segment\n          - account_balance\n          - customer_key\n        excludes:\n          - phone\n          - address\n          - comment\n          \n      # Geographic context\n      - join_path: orders.customers.customer_nations\n        includes:\n          - name: name\n            alias: nation\n            \n      - join_path: orders.customers.customer_nations.customer_regions\n        includes:\n          - name: name\n            alias: region\n          - region_key\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Testing Your Pre-Aggregation:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Save your changes"})," to the new view"]}),"\n",(0,i.jsxs)(n.li,{children:["Build the pre-aggregation (",(0,i.jsx)(n.strong,{children:"Pre-Aggregations"})," tab, click ",(0,i.jsx)(n.code,{children:"orders customer_behavior"}),', then "Build All")']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test in Playground"})," using the ",(0,i.jsx)(n.code,{children:"customer_behavior"})," view with:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Measures: ",(0,i.jsx)(n.code,{children:"count"}),", ",(0,i.jsx)(n.code,{children:"total_revenue"})]}),"\n",(0,i.jsxs)(n.li,{children:["Dimensions: ",(0,i.jsx)(n.code,{children:"customers_segment"}),", ",(0,i.jsx)(n.code,{children:"order_size_category"})]}),"\n",(0,i.jsxs)(n.li,{children:["Time: ",(0,i.jsx)(n.code,{children:"order_date"})," by ",(0,i.jsx)(n.code,{children:"month"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Verify cache usage"})," by checking the Generated SQL tab.  Note that the pre-aggregation is at the ",(0,i.jsx)(n.code,{children:"day"})," granularity, but the query is rolled up to ",(0,i.jsx)(n.code,{children:"month"})," - Cube will automatically roll up the pre-aggregation to the requested granularity."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"understanding-your-pre-aggregation-strategy",children:"Understanding Your Pre-Aggregation Strategy"}),"\n",(0,i.jsxs)(n.p,{children:["You've now created ",(0,i.jsx)(n.strong,{children:"three different pre-aggregations"})," for different use cases:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Pre-Aggregation"}),(0,i.jsx)(n.th,{children:"Cube"}),(0,i.jsx)(n.th,{children:"Granularity"}),(0,i.jsx)(n.th,{children:"Purpose"}),(0,i.jsx)(n.th,{children:"Users"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"sales_by_month"})}),(0,i.jsx)(n.td,{children:"line_items"}),(0,i.jsx)(n.td,{children:"month"}),(0,i.jsx)(n.td,{children:"Basic sales reporting"}),(0,i.jsx)(n.td,{children:"All users"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"executive_kpis"})}),(0,i.jsx)(n.td,{children:"line_items"}),(0,i.jsx)(n.td,{children:"week"}),(0,i.jsx)(n.td,{children:"Executive dashboards"}),(0,i.jsx)(n.td,{children:"Leadership"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"customer_behavior"})}),(0,i.jsx)(n.td,{children:"orders"}),(0,i.jsx)(n.td,{children:"day"}),(0,i.jsx)(n.td,{children:"Customer analysis"}),(0,i.jsx)(n.td,{children:"All users"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Key Patterns You've Learned:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Match granularity to business need"}),": Daily for operations, weekly for executives"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Choose the right cube"}),": Line items for product/sales details, orders for customer behavior"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Include security dimensions"}),": All pre-aggregations work with row-level security"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Plan for specific dashboards"}),": Each pre-aggregation serves real business questions"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"performance-optimization-strategies",children:"Performance Optimization Strategies"}),"\n",(0,i.jsx)(n.h3,{id:"1-granularity-matters",children:"1. Granularity Matters"}),"\n",(0,i.jsx)(n.p,{children:"Choose the granularity based on how your data will be queried.  You can create multiple pre-aggregations at different granularities to serve different use cases, understanding that the higher the granularity (e.g., month vs. day, category vs. item), the smaller and more performant the pre-aggregation will be."}),"\n",(0,i.jsx)(n.h3,{id:"2-dimension-selection",children:"2. Dimension Selection"}),"\n",(0,i.jsx)(n.p,{children:"Include only dimensions that:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Are used in dashboard filters or grouping"}),"\n",(0,i.jsx)(n.li,{children:"Are needed for row-level security"}),"\n",(0,i.jsx)(n.li,{children:"Provide business value"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Avoid:"}),' Including all possible dimensions "just in case" - that\'s what the fall back to a live query is for.  Pre-aggregations are generally focused on the most common queries.  Occasionally, you may need to create a pre-aggregation that includes low-level or even primary key-level grain for specific use cases, but this should be the exception, not the rule.']}),"\n",(0,i.jsx)(n.h3,{id:"3-measure-additivity",children:"3. Measure Additivity"}),"\n",(0,i.jsx)(n.p,{children:"Structure your measures for maximum reusability:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'# \u2705 Good - Additive components\nmeasures:\n  - name: gross_revenue\n    type: sum\n    sql: "{CUBE}.extended_price"\n    \n  - name: discount_amount\n    type: sum\n    sql: "{CUBE}.extended_price * {CUBE}.discount"\n    \n  - name: net_revenue\n    type: number\n    sql: "{CUBE.gross_revenue} - {CUBE.discount_amount}"\n\n# \u274c Avoid - Non-additive in pre-aggregation\nmeasures where possible:\n  - name: avg_discount_pct\n    type: avg\n    sql: discount\n'})}),"\n",(0,i.jsx)(n.h3,{id:"4-refresh-strategy-based-on-business-needs",children:"4. Refresh Strategy Based on Business Needs"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'# "Real-time" operational metrics\nrefresh_key:\n  every: "10 minute"\n\n# Intra-day business metrics\nrefresh_key:\n  every: "1 hour"\n\n# Historical analysis\nrefresh_key:\n  every: "1 day"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"visual-performance-indicator",children:"Visual Performance Indicator"}),"\n",(0,i.jsxs)(n.p,{children:["In Cube Cloud's Playground, you'll see a ",(0,i.jsx)(n.strong,{children:"cache indicator"})," showing whether your query hit:"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Cache performance indicators",src:s(1382).A+"",width:"688",height:"296"})}),"\n",(0,i.jsxs)(n.p,{children:["You can also see these indicators if you review the ",(0,i.jsx)(n.strong,{children:"Query History"})," tab where you can see all the queries against your data model from all APIs.  The playground queryies show up as REST. Clicking on a query will show you the details, including the ",(0,i.jsx)(n.strong,{children:"Generated SQL"}),", ",(0,i.jsx)(n.strong,{children:"Security Context"}),", and ",(0,i.jsx)(n.strong,{children:"Performance Graphs"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Query History with Cache Indicators",src:s(3611).A+"",width:"3020",height:"1516"})}),"\n",(0,i.jsx)(n.h2,{id:"building-and-monitoring-pre-aggregations",children:"Building and Monitoring Pre-Aggregations"}),"\n",(0,i.jsx)(n.h3,{id:"build-strategy",children:"Build Strategy"}),"\n",(0,i.jsx)(n.p,{children:"When adding pre-aggregations to your data model:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Start Small"})," - Add one pre-aggregation at a time"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monitor Build Times"})," - Check the Pre-Aggregations tab"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Verify Usage"})," - Ensure queries are hitting the cache"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Iterate"})," - Adjust dimensions and granularity based on usage, add indexes and partitions as needed"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"common-pitfalls-to-avoid",children:"Common Pitfalls to Avoid"}),"\n",(0,i.jsxs)(n.p,{children:["\u274c ",(0,i.jsx)(n.strong,{children:"Too Many Dimensions"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# Bad - Creates massive pre-aggregation that's slow to build and query\ndimensions: [customer_key, product_id, order_id, line_number, sku, ...]\n# Result: Millions of combinations, slow builds, little cache benefit\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Strategic Dimensions"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# Good - Focused on actual dashboard filtering and grouping needs\ndimensions: [region, segment, product_type, priority]\n# Result: Manageable size, fast builds, excellent cache hit rates - especially for your initial dashboard page loads\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u274c ",(0,i.jsx)(n.strong,{children:"Too Fine Granularity"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# Bad for long-term historical data\ngranularity: minute  # 2 years = 1,051,200 time periods per dimension combo\n# Result: Enormous pre-aggregations\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Appropriate Granularity"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# Good - Match your dashboard's actual time grouping needs\ngranularity: day    # For operational dashboards (730 periods/2 years)\ngranularity: week   # For executive trending (104 periods/2 years)  \ngranularity: month  # For historical analysis (24 periods/2 years)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u274c ",(0,i.jsx)(n.strong,{children:"Missing Security Dimensions"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# Bad - Pre-aggregation can't be used with row-level security\ndimensions: [product_type, order_status]\n# Result: Security filters force queries to hit raw data\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Include Security Dimensions"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# Good - Include dimensions used in query_rewrite filters\ndimensions: [\n  product_type, \n  order_status,\n  customer_regions.name,        # For regional filtering\n  customer_regions.region_key,  # For regional security  \n  customers.customer_key        # For sales rep security\n]\n# Result: All user types can hit the pre-aggregation cache\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u274c ",(0,i.jsx)(n.strong,{children:"Non-Additive Measures Only"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# Bad - These don't aggregate well across different granularities\nmeasures: [average_order_value, conversion_rate, distinct_customers]\n# Result: Pre-aggregation only useful for exact grain matches\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Additive Building Blocks"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# Good - Store components that can be aggregated and combined\nmeasures: [\n  total_sales_amount,    # Can sum across any dimension\n  order_count,           # Can sum across any dimension  \n  customer_count         # Use count from customers cube instead of count_distinct\n]\n# Result: Pre-aggregation useful for many different queries\n"})}),"\n",(0,i.jsx)(n.h2,{id:"advanced-caching-concepts",children:"Advanced Caching Concepts"}),"\n",(0,i.jsx)(n.p,{children:"While we won't implement these in the workshop, Cube offers powerful advanced caching features:"}),"\n",(0,i.jsx)(n.h3,{id:"rollup-only-mode",children:"Rollup-Only Mode"}),"\n",(0,i.jsx)(n.p,{children:"Force all queries to use pre-aggregations only:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"CUBEJS_ROLLUP_ONLY=true\n"})}),"\n",(0,i.jsx)(n.p,{children:'Perfect for keeping your data warehouse "asleep" except during scheduled refreshes.'}),"\n",(0,i.jsx)(n.h3,{id:"custom-indexes",children:"Custom Indexes"}),"\n",(0,i.jsx)(n.p,{children:"Optimize cache storage with strategic indexing:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"pre_aggregations:\n  - name: optimized_sales\n    indexes:\n      - dimensions: [region, customer_segment]\n      - dimensions: [ship_date]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"rollup-lambdas",children:"Rollup Lambdas"}),"\n",(0,i.jsxs)(n.p,{children:["Lambda pre-aggregations implement the ",(0,i.jsx)(n.strong,{children:"Lambda architecture pattern"}),", combining batch-processed historical data with real-time streaming data to provide a complete, up-to-date view of your metrics."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"The Concept:"}),"\nThink of Lambda pre-aggregations as a smart union that combines:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Batch Layer"}),": Pre-computed historical data (fast, complete)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Speed Layer"}),": Live streaming data (fresh, recent)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Serving Layer"}),": Cube seamlessly merges both for queries"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Why Use Lambda Pre-Aggregations?"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Complete Data Coverage"}),": Historical analysis + real-time insights"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance"}),": Avoid expensive queries on massive historical datasets"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Freshness"}),": Get the latest data without waiting for batch processing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scalability"}),": Handle high-volume streaming data efficiently"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Types Available:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Batch + Source Data"}),": Combines pre-aggregated historical data with live queries to your source database"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"pre_aggregations:\n  - name: sales_with_live_data\n    type: rollup_lambda\n    union_with_source_data: true\n    measures: [total_sales_amount]\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Batch + Streaming Data"}),": Merges pre-aggregated historical data with real-time streaming sources"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"pre_aggregations:\n  - name: real_time_analytics\n    type: rollup_lambda\n    streaming_data_source: kafka_stream\n    measures: [event_count, total_value]\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Common Use Cases:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"E-commerce"}),": Historical order data + live shopping cart events"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"IoT Analytics"}),": Archived sensor data + real-time device streams"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User Analytics"}),": Historical user behavior + live clickstream data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Financial Reporting"}),": Daily batch reports + real-time transaction feeds"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Batch and Source Data Lambda Pre-Aggregation",src:s(6274).A+"",width:"2796",height:"970"})}),"\n",(0,i.jsx)(n.h3,{id:"partitioning",children:"Partitioning"}),"\n",(0,i.jsx)(n.p,{children:"Split large pre-aggregations across multiple date partitions to improve performance and mange incremental updates:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"pre_aggregations:\n  - name: partitioned_sales\n    time_dimension: ship_date\n    partition_granularity: month\n    # Automatically creates monthly partitions for the ship_date dimension\n"})}),"\n",(0,i.jsx)(n.h3,{id:"orchestration",children:"Orchestration"}),"\n",(0,i.jsx)(n.p,{children:"Cube can automatically orchestrate pre-aggregation builds using tools like Airflow, Dagster, or Prefect. This allows you to schedule and manage complex data workflows, ensuring your pre-aggregations are always up-to-date."}),"\n",(0,i.jsx)(n.h2,{id:"key-takeaways",children:"Key Takeaways"}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Two-level caching"})," - Automatic in-memory + configurable pre-aggregations",(0,i.jsx)(n.br,{}),"\n","\u2705 ",(0,i.jsx)(n.strong,{children:"Additive measures"})," - Design for cache-friendly aggregations",(0,i.jsx)(n.br,{}),"\n","\u2705 ",(0,i.jsx)(n.strong,{children:"Security-aware"})," - All caching respects access control rules",(0,i.jsx)(n.br,{}),"\n","\u2705 ",(0,i.jsx)(n.strong,{children:"Background refresh"})," - Data stays fresh without user impact",(0,i.jsx)(n.br,{}),"\n","\u2705 ",(0,i.jsx)(n.strong,{children:"Extreme performance"})," - Orders of magnitude faster than direct database queries"]}),"\n",(0,i.jsxs)(n.p,{children:["Caching transforms Cube from a query translator into a ",(0,i.jsx)(n.strong,{children:"high-performance analytical engine"})," that can handle massive datasets with millisecond response times."]}),"\n",(0,i.jsx)(n.h2,{id:"commit-your-caching-optimizations",children:"Commit Your Caching Optimizations"}),"\n",(0,i.jsx)(n.p,{children:"Now that you've implemented sophisticated caching with pre-aggregations, let's save your work:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Step 1: Review Your Changes"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ensure you're in Development Mode"}),' - Look for the "Dev Mode" indicator']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test your pre-aggregations"})," one final time:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Verify the ",(0,i.jsx)(n.code,{children:"sales_by_month"})," pre-aggregation is built and working"]}),"\n",(0,i.jsxs)(n.li,{children:["Check that the ",(0,i.jsx)(n.code,{children:"executive_kpis"})," pre-aggregation serves executive queries"]}),"\n",(0,i.jsxs)(n.li,{children:["Confirm the ",(0,i.jsx)(n.code,{children:"customer_behavior"})," pre-aggregation works with the new view"]}),"\n",(0,i.jsx)(n.li,{children:"Test that cache indicators show queries hitting pre-aggregations"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Step 2: Commit Your Changes"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Navigate to the Data Model page"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Review all your changes"})," - You should see all modified files from the entire workshop: data modeling, access control, and caching changes"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:'Click "Commit & Sync"'})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Add a descriptive commit message"}),":","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Complete TPCH analytics platform implementation\n\n- Enhanced data model with business metrics and comprehensive sales view\n- Implemented comprehensive access control (RLS, column masking, view visibility)\n- Added high-performance pre-aggregations for sub-second queries\n- Production-ready semantic layer for analytics applications\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:'Click "Commit & Sync"'})," to save all your workshop progress"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Step 3: Deploy to Production"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:'Click the "Merge" button'})," (same location as the Commit button)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Enter a merge message"}),":","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Deploy complete TPCH analytics platform\n\nReady for production use with React dashboard and other applications\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:'Check "Delete -dev- branch"'})," to clean up your development branch"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:'Click "Merge"'})," to deploy to production"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Step 4: Verify Production Deployment"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Wait for deployment"})," - Check the deployment status indicator"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test in Playground"})," (now using production):","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Run a few queries to ensure everything works correctly"}),"\n",(0,i.jsx)(n.li,{children:"Verify that your security contexts still function properly"}),"\n",(0,i.jsx)(n.li,{children:"Check that pre-aggregations are available in production"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Note your production API endpoint"})," - You'll use this in the next section"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"what-youve-accomplished",children:"What You've Accomplished"}),"\n",(0,i.jsxs)(n.p,{children:["\ud83c\udf89 ",(0,i.jsx)(n.strong,{children:"Congratulations!"})," You've successfully built and deployed a production-ready analytics platform:"]}),"\n",(0,i.jsxs)(n.p,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Comprehensive Data Model"})," - Sales view with line item granularity and business context",(0,i.jsx)(n.br,{}),"\n","\u2705 ",(0,i.jsx)(n.strong,{children:"Enterprise Security"})," - Row-level security, column masking, and role-based access control",(0,i.jsx)(n.br,{}),"\n","\u2705 ",(0,i.jsx)(n.strong,{children:"High-Performance Caching"})," - Sub-second queries via optimized pre-aggregations",(0,i.jsx)(n.br,{}),"\n","\u2705 ",(0,i.jsx)(n.strong,{children:"Production Deployment"})," - Live, secure, and ready for real applications"]}),"\n",(0,i.jsx)(n.p,{children:"Your data model is now ready for API consumption and application development!"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Next"}),": ",(0,i.jsx)(n.a,{href:"/docs/apis",children:"APIs \u2192"})," - Learn how to consume your cached, secure data through multiple API interfaces."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1382:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/cache-indicator-534b88a9375b4483e48c415d51c869c4.png"},3611:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/query-history-ad0412d5b3b1d97b4570cb11b67077c1.png"},6274:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/rollup-lambda-7f7a47ce4eb39cb7ccba529244d143b1.png"},7038:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/pre-agg-build-complete-f1f89a34e66d77d4e84fd66a3303ade1.png"},8297:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/discount_rate_preagg-5f1032661674172e097074b87f74a1c1.png"}}]);